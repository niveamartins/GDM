import React, { ComponentType, Ref } from 'react';
import { UserMedia } from './useUserMedia';
interface InjectedProps {
    userMedia: UserMedia;
    ref?: Ref<HTMLElement>;
}
export default function withUserMedia<BaseProps extends InjectedProps>(WrappedComponent: ComponentType<BaseProps>): React.ForwardRefExoticComponent<React.PropsWithoutRef<Pick<BaseProps, Exclude<keyof BaseProps, "userMedia" | "ref">> & {
    forwardedRef?: ((instance: HTMLElement | null) => void) | React.RefObject<HTMLElement> | null | undefined;
}> & React.RefAttributes<{}>>;
export {};
